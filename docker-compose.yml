version: "3.7"

x-general:
  &general-env
    USER_UID: ${USER_UID}
    USER_GID: ${USER_GID}

x-php:
  &php-env
    COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
    APP_DEV_HOST: ${VIRTUAL_HOST}

networks:
  docker-proxy:
    external: true

services:
  nginx:
    image: spurit/nginx:1.18.10
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    depends_on:
      - php
    environment:
      <<: *general-env
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      PHP_HOST: ${COMPOSE_PROJECT_NAME}-php
    volumes:
      - ./src:/var/www/app:ro
      - ./docker/data/nginx-logs:/var/log/nginx
    networks:
      - default
      - docker-proxy

  php:
    image: dmitrakovich/php:7.3.29
    container_name: ${COMPOSE_PROJECT_NAME}-php
    depends_on:
      - mysql
      - redis
    environment:
      <<: *general-env
      <<: *php-env
    volumes:
      - ./docker/data/php:/var/php
      - ./src:/var/www/app
      - ~/.composer/cache:/var/cache/cache-composer
      - ~/.npm:/var/cache/cache-npm
    networks:
      - default
      - docker-proxy

  php-cron:
    image: spurit/php-dev:7.4
    container_name: ${COMPOSE_PROJECT_NAME}-cron
    init: true
    entrypoint: ["/opt/entrypoint-cron.sh", "/cron/crontab"]
    depends_on:
      - php
    environment:
      <<: *general-env
      <<: *php-env
    volumes:
      - ./docker/data/php:/var/php
      - ./src:/var/www/app
      - ./docker/stuff/crontab:/cron/crontab
    networks:
      - default
      - docker-proxy

  php-supervisor:
    image: spurit/php-dev:7.4
    container_name: ${COMPOSE_PROJECT_NAME}-supervisor
    entrypoint: ["/opt/entrypoint-supervisor.sh"]
    stop_grace_period: ${SUPERVISOR_STOP_WAIT_SECS}s
    depends_on:
      - php
    environment:
      <<: *general-env
      <<: *php-env
      SUPERVISOR_STOP_WAIT_SECS: ${SUPERVISOR_STOP_WAIT_SECS}
    volumes:
      - ./docker/data/php:/var/php
      - ./src:/var/www/app
      - ./docker/stuff/supervisor.conf:/etc/supervisor/conf.d/supervisor.conf
    networks:
      - default
      - docker-proxy

  mysql:
    image: mysql:8.0.19
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    command: "--innodb_use_native_aio=0 --innodb_file_per_table=1 --expire_logs_days=1 --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
    user: ${USER_UID}:${USER_GID}
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./docker/data/mysql:/var/lib/mysql

  redis:
    image: spurit/redis:5.0.9
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    user: ${USER_UID}:${USER_GID}
    volumes:
      - ./docker/data/redis:/redis-data

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.0.2
    container_name: ${COMPOSE_PROJECT_NAME}-pma
    depends_on:
      - mysql
    environment:
      VIRTUAL_HOST: ${HOST_PHPMYADMIN}
      PMA_HOST: ${COMPOSE_PROJECT_NAME}-mysql
      PMA_ABSOLUTE_URI: https://${HOST_PHPMYADMIN}/
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - default
      - docker-proxy

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin:v1.13.1
    container_name: ${COMPOSE_PROJECT_NAME}-pra
    depends_on:
      - redis
    environment:
      VIRTUAL_HOST: ${HOST_PHPREDISADMIN}
      REDIS_1_HOST: ${COMPOSE_PROJECT_NAME}-redis
    networks:
      - default
      - docker-proxy
