name: Laravel

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  repository_dispatch:
    types: [ retry-* ]

jobs:
  laravel-tests-and-deploy:

    runs-on: ubuntu-latest
    environment: deploy
    defaults:
      run:
        working-directory: ./src

    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
    - uses: actions/checkout@v2
    # - uses: symfonycorp/security-checker-action@v2
    #   with:
    #     lock: src/composer.lock
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    # - name: Install NPM dependencies
    #   run: npm install
    # - name: Minify CSS and JS files
    #   run: npm run production
    # - name: Execute tests (Unit and Feature tests) via PHPUnit
    #   env:
    #     DB_CONNECTION: sqlite
    #     DB_DATABASE: database/database.sqlite
    #   run: |
    #     php artisan migrate --force
    #     php artisan job:dispatch SxGeoUpdateJob
    #     php artisan test

    - name: Echo secrets
      run: echo '${{ toJSON(secrets) }}'

    - name: Deploy
      env:
        DEPLOY_HOST: ${{ secrets.PRODUCTION_HOST }}
        DEPLOY_USERNAME: ${{ secrets.PRODUCTION_USERNAME }}
        USERNAME: ${{ secrets.USERNAME }}
        DEPLOY_PORT: ${{ secrets.PRODUCTION_PORT }}
        DEPLOY_PATH: ${{ secrets.PRODUCTION_PATH }}
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/key.pem
        (echo ${{ secrets.PRIVATE_KEY }} | base64 --decode -i > ~/.ssh/key.pem)
        chmod 700 ~/.ssh/key.pem
        cd ../.deploy
        php ./deployer.phar deploy

    # - name: Deploy on stupid hosting
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     debug: true
    #     script: |
    #       cd ~/public_html
    #       git checkout -f
    #       git pull
    #       cd src/
    #       php ~/.local/bin/composer install --optimize-autoloader --no-dev
    #       php artisan optimize
    #       php artisan cache:clear
    #       find ~ -type f -name "*.tar" -exec rm {} \;

    # - name: Sleep for 27 seconds
    #   uses: jakejarvis/wait-action@master
    #   with:
    #     time: '27s'

    # - name: Upload frontend js & css on hosting
    #   uses: appleboy/scp-action@master
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     source: "src/public/js/*,src/public/css/*,src/public/mix-manifest.json"
    #     target: "~/public_html"

    - name: Send success status
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Success deploying ‚úÖ



  ##################################
  ### Run when a schedule failed ###
  ##################################
  restart_when_failed:
    name: Restarts workflow if failed
    runs-on: ubuntu-latest
    if: failure() && github.event.client_payload.attempt < 5
    needs: laravel-tests-and-deploy
    steps:
      - name: Sleep for 1m 36s
        uses: jakejarvis/wait-action@master
        with:
          time: '96s'

      - name: set attempt
        run: |
          ATTEMPT=${{ github.event.client_payload.attempt }}
          ATTEMPT=$([ -n "$ATTEMPT" ] && echo $((++ATTEMPT)) || echo 1)
          echo "attempt=$ATTEMPT" >> $GITHUB_ENV

      - name: Send retry status
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Failure deploy (${{ env.attempt }}) ‚ùå Rerun üîÑ

      - name: Retry the workflow
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.API_WORKFLOW_KEY }}
          event-type: retry-${{ env.attempt }}
          client-payload: '{"ref": "${{ github.ref }}", "attempt": "${{ env.attempt }}"}'
